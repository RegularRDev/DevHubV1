_77Watermark("Script developed by Team Archie! V2.2 Rework")
local console = loadstring(game:HttpGet("https://raw.githubusercontent.com/mstudio45/MSDOORS/main/Utils/Console/Utility.lua"))()
local message = console.custom_console_progressbar("[Archie Hub]: Loading Script... ")

for i = 1, 10 do
    message.update_message_with_progress("[Archie Hub]: Detecting game... " .. i, i)
    task.wait(.20)
end

message.update_message("[Archie Hub]: Game Detected!", "rbxasset://textures/AudioDiscovery/done.png", Color3.fromRGB(51, 255, 85))
wait(0.5)
local console = loadstring(game:HttpGet("https://raw.githubusercontent.com/mstudio45/MSDOORS/main/Utils/Console/Utility.lua"))()
local message = console.custom_console_progressbar("[Archie Hub]: Loading Script...")

for i = 1, 10 do
    message.update_message_with_progress("[Archie Hub]: Loading Gui and Variables " .. i, i)
    task.wait(.40)
end

message.update_message("[Archie Hub]: Script Loaded!", "rbxasset://textures/AudioDiscovery/done.png", Color3.fromRGB(51, 255, 85))
local repo = "https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/"

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/Library.lua"))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/addons/SaveManager.lua"))()
Library:Notify("Script developed by Archie, thanks for using our script ❤️", nil, 4590657391)

local Window = Library:CreateWindow({
    Title = 'Archie Hub | Prison Life',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})
local Tabs = {
    Main = Window:AddTab('Main'),
    ['Universal'] = Window:AddTab('Universal'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Blatant')
LeftGroupBox:AddLabel('Reset Character'):AddKeyPicker('Reset', {
	-- SyncToggleState only works with toggles.
	-- It allows you to make a keybind which has its state synced with its parent toggle

	-- Example: Keybind which you use to toggle flyhack, etc.
	-- Changing the toggle disables the keybind state and toggling the keybind switches the toggle state

	Default = 'Z', -- String as the name of the keybind (MB1, MB2 for mouse buttons)
	SyncToggleState = false,


	-- You can define custom Modes but I have never had a use for it.
	Mode = 'Toggle', -- Modes: Always, Toggle, Hold

	Text = 'Reset Character', -- Text to display in the keybind menu
	NoUI = false, -- Set to true if you want to hide from the Keybind menu,

	-- Occurs when the keybind is clicked, Value is `true`/`false`
	Callback = function(Value)
		Library:Notify("Keybind Triggered ", nil, 4590657391)
        game.Players.LocalPlayer.Character.Humanoid.Health = 0
	end,

	-- Occurs when the keybind itself is changed, `New` is a KeyCode Enum OR a UserInputType Enum
	ChangedCallback = function(New)
		Library:Notify("New keybind assigned to Reset Character", nil, 4590657391)
	end
})
local MyButton = LeftGroupBox:AddButton({
    Text = 'Execute Silent Aimbot',
    Func = function()
         loadstring(game:HttpGet("https://raw.githubusercontent.com/TeamArchie/ArchieHub/main/PrisonUtilities/SilentAim"))()
         wait(1)
         Library:Notify("Silent Aimbot loaded", nil, 4590657391)
         wait(0.2)
         Library:Notify("Im done trying to fix this shit for toggles, rejoin to revert", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Execute Active Silent aimbot'
})
local MyButton = LeftGroupBox:AddButton({
    Text = 'Get guns',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(823.700806, 98.4906921, 2248.198)
        wait(0.2)
        local args = {
            [1] = workspace:WaitForChild("Prison_ITEMS"):WaitForChild("giver"):WaitForChild("M9"):WaitForChild("ITEMPICKUP")
        }
        
        workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(unpack(args))
        local args = {
            [1] = workspace:WaitForChild("Prison_ITEMS"):WaitForChild("giver"):WaitForChild("Remington 870"):WaitForChild("ITEMPICKUP")
        }
        
        workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(unpack(args))        
        Library:Notify("Getting M9 and Remington", nil, 4590657391)
        wait(0.2)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-936.854614, 93.5627747, 2056.16357)
        wait(0.2)
        local args = {
            [1] = workspace:WaitForChild("Prison_ITEMS"):WaitForChild("giver"):WaitForChild("AK-47"):WaitForChild("ITEMPICKUP")
        }
        
        workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(unpack(args))    
        Library:Notify("Getting AK-47", nil, 4590657391)    
        wait(0.1)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(980.998047, 96.9900055, 2328.27734)
        Library:Notify("All guns equiped!", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Get all guns (doesnt includes Swat gun)'
})
LeftGroupBox:AddToggle('noclip', {
	Text = 'Noclip',
	Default = false, -- Default value (true / false)
	Tooltip = 'Ignore everthing', -- Information shown when you hover over the toggle
	Callback = function(state)
        getfenv().noclip = (state and true or false)
        while getfenv().noclip do
            for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do if v:IsA("BasePart") then v.CanCollide = false end end wait()
        end
        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do if v:IsA("BasePart") then v.CanCollide = true end end
        end
    end
	end
})
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Teams')
local MyButton = LeftGroupBox:AddButton({
    Text = 'Change to Police (Fast Mode)',
    Func = function()
        local args = {
            [1] = "Bright blue"
        }
        
        workspace:WaitForChild("Remote"):WaitForChild("TeamEvent"):FireServer(unpack(args))   
        Library:Notify("Switched to Police Team!", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Converts you to police (Fast but reset your character)'
})
local MyButton = LeftGroupBox:AddButton({
    Text = 'Change to Prisioner (Fast Mode)',
    Func = function()
        local args = {
            [1] = "Bright orange"
        }
        
        workspace:WaitForChild("Remote"):WaitForChild("TeamEvent"):FireServer(unpack(args))  
        Library:Notify("Switched to Prisioner Team!", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Converts you to prisioner (Fast but reset your character)'
})
local MyButton = LeftGroupBox:AddButton({
    Text = 'Change to Criminal (Fast TP)',
    Func = function()      
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(213.806778, 58.1100693, 2361.68872)
        Library:Notify("Waiting for Criminal log (You are gonna teleported to back hall!)", nil, 4590657391)
        wait(10)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(980.998047, 96.9900055, 2328.27734)
        Library:Notify("Switched to Criminal team Team!", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Method 1, TP more faster'
})
local MyButton = LeftGroupBox:AddButton({
    Text = 'Change to Criminal (Slow TP)',
    Func = function()      
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(213.806778, 58.1100693, 2361.68872)
        Library:Notify("Waiting for Criminal log (You are gonna teleported to back hall!)", nil, 4590657391)
        wait(10)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(980.998047, 96.9900055, 2328.27734)
        Library:Notify("Switched to Criminal team Team!", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Method 2 (Slow TP)'
})
local RightGroupBox = Tabs.Main:AddRightGroupbox('Teleports')
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to armory (Inside)',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(838.539917, 96.9900055, 2266.84277)
        Library:Notify("Teleported to Armory", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to Guard zone (Armory)'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to prison cells (Inside)',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(916.632507, 96.9899902, 2473.25854)
        Library:Notify("Teleported to prison cells", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to prison cells'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Nexus (Inside)',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(916.800171, 99.9900055, 2391.6001)
        Library:Notify("Teleported to Nexus (inside spawn)", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to Nexus (Spawn inside of prison)'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Back Hall (Inside)',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(980.998047, 96.9900055, 2328.27734)
        Library:Notify("Teleported to Back Hall", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to back hall (the common way the police Tryhards use lmao)'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Courtyard (Outside)',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(684.000549, 94.1999435, 2345.79907)
        Library:Notify("Teleported to Courtyard", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to the !CENTER! of Courtyard'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Tower 1',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(501.16507, 127.03994, 2069.70508)
        Library:Notify("Teleported to Tower N.1", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to the Tower N.1'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Tower 2',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(502.385315, 127.03994, 2590.61719)
        Library:Notify("Teleported to Tower N.2", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to the Tower N.2'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Tower 3',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(824.322998, 127.03994, 2588.43115)
        Library:Notify("Teleported to Tower N.3", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to the Tower N.3 (Courtyard tower)'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Tower 4',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(823.258057, 127.03994, 2071.37598)
        Library:Notify("Teleported to Tower N.4", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to the Tower N.4'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Tower 5',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1158.28772, 127.03994, 2590.03101)
        Library:Notify("Teleported to Tower N.5", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to the Tower N.5'
})
local MyButton = RightGroupBox:AddButton({
    Text = 'Teleport to Tower 6',
    Func = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1157.995, 127.03994, 2068.45459)
        Library:Notify("Teleported to Tower N.6", nil, 4590657391)
    end,
    DoubleClick = true,
    Tooltip = 'Teleport to the Tower N.6'
})
local RightGroupBox = Tabs.Main:AddRightGroupbox('Random things (Fun)')
local MyButton = RightGroupBox:AddButton({
    Text = 'Get Classic Sword',
    Func = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/TeamArchie/ArchieHub/main/PrisonUtilities/Sword.lua"))()
        Library:Notify("Gived Classic sword", nil, 4590657391)
    end,
    DoubleClick = false,
    Tooltip = 'This give you the famous Uctrons Sword (or just Classic Sword, FE)'
})
local MenuGroup = Tabs['Universal']:AddLeftGroupbox('Universal Scripts')
MenuGroup:AddButton('Execute Infinite Yield', function() 
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))() end)
MenuGroup:AddButton('Execute Dex Explorer', function() 
    loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))() end)
-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload Entire Script', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('ArchHub')
SaveManager:SetFolder('ArchHub/specific-game')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings'])

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
